import{_ as t,c as l,b as d,e as s,w as i,r as c,o as v,d as n}from"./app-BPh7qqzS.js";const p={};function r(b,a){const e=c("Graphviz");return v(),l("div",null,[a[5]||(a[5]=d(`<h1 id="graphviz-demo" tabindex="-1" data-v-4fce6db2><a class="header-anchor" href="#graphviz-demo" data-v-4fce6db2><span data-v-4fce6db2>Graphviz Demo</span></a></h1><p data-v-4fce6db2>这个页面测试了 Graphviz 组件的功能。</p><h2 id="默认对齐-居中" tabindex="-1" data-v-4fce6db2><a class="header-anchor" href="#默认对齐-居中" data-v-4fce6db2><span data-v-4fce6db2>默认对齐 (居中)</span></a></h2><p data-v-4fce6db2>默认情况下，图表会居中显示。</p><div class="language-md line-numbers-mode" data-highlighter="shiki" data-ext="md" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;" data-v-4fce6db2><pre class="shiki shiki-themes one-light one-dark-pro vp-code" data-v-4fce6db2><code data-v-4fce6db2><span class="line" data-v-4fce6db2><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;" data-v-4fce6db2>&lt;Graphviz&gt;</span></span>
<span class="line" data-v-4fce6db2><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;" data-v-4fce6db2>  digraph G {</span></span>
<span class="line" data-v-4fce6db2><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;" data-v-4fce6db2>    a -&gt; b;</span></span>
<span class="line" data-v-4fce6db2><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;" data-v-4fce6db2>    b -&gt; c;</span></span>
<span class="line" data-v-4fce6db2><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;" data-v-4fce6db2>    c -&gt; a;</span></span>
<span class="line" data-v-4fce6db2><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;" data-v-4fce6db2>  }</span></span>
<span class="line" data-v-4fce6db2><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;" data-v-4fce6db2>&lt;/Graphviz&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;" data-v-4fce6db2><div class="line-number" data-v-4fce6db2></div><div class="line-number" data-v-4fce6db2></div><div class="line-number" data-v-4fce6db2></div><div class="line-number" data-v-4fce6db2></div><div class="line-number" data-v-4fce6db2></div><div class="line-number" data-v-4fce6db2></div><div class="line-number" data-v-4fce6db2></div></div></div>`,5)),s(e,null,{default:i(()=>a[0]||(a[0]=[n(" digraph G { a -> b; b -> c; c -> a; } ")])),_:1}),a[6]||(a[6]=d(`<h2 id="左对齐" tabindex="-1" data-v-4fce6db2><a class="header-anchor" href="#左对齐" data-v-4fce6db2><span data-v-4fce6db2>左对齐</span></a></h2><p data-v-4fce6db2>通过设置 <code data-v-4fce6db2>alignment=&quot;left&quot;</code> 属性，可以将图表左对齐。</p><div class="language-md line-numbers-mode" data-highlighter="shiki" data-ext="md" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;" data-v-4fce6db2><pre class="shiki shiki-themes one-light one-dark-pro vp-code" data-v-4fce6db2><code data-v-4fce6db2><span class="line" data-v-4fce6db2><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;" data-v-4fce6db2>&lt;Graphviz alignment=&quot;left&quot;&gt;</span></span>
<span class="line" data-v-4fce6db2><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;" data-v-4fce6db2>  graph {</span></span>
<span class="line" data-v-4fce6db2><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;" data-v-4fce6db2>    A -- B -- C;</span></span>
<span class="line" data-v-4fce6db2><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;" data-v-4fce6db2>  }</span></span>
<span class="line" data-v-4fce6db2><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;" data-v-4fce6db2>&lt;/Graphviz&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;" data-v-4fce6db2><div class="line-number" data-v-4fce6db2></div><div class="line-number" data-v-4fce6db2></div><div class="line-number" data-v-4fce6db2></div><div class="line-number" data-v-4fce6db2></div><div class="line-number" data-v-4fce6db2></div></div></div>`,3)),s(e,{alignment:"left"},{default:i(()=>a[1]||(a[1]=[n(" graph { A -- B -- C; } ")])),_:1}),a[7]||(a[7]=d(`<h2 id="右对齐" tabindex="-1" data-v-4fce6db2><a class="header-anchor" href="#右对齐" data-v-4fce6db2><span data-v-4fce6db2>右对齐</span></a></h2><p data-v-4fce6db2>通过设置 <code data-v-4fce6db2>alignment=&quot;right&quot;</code> 属性，可以将图表右对齐。你也可以同时使用 <code data-v-4fce6db2>containerClass</code> 或 <code data-v-4fce6db2>:containerStyle</code> 添加自定义样式。</p><div class="language-md line-numbers-mode" data-highlighter="shiki" data-ext="md" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;" data-v-4fce6db2><pre class="shiki shiki-themes one-light one-dark-pro vp-code" data-v-4fce6db2><code data-v-4fce6db2><span class="line" data-v-4fce6db2><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;" data-v-4fce6db2>&lt;Graphviz alignment=&quot;right&quot; containerClass=&quot;my-graph-container&quot; :containerStyle=&quot;{ border: &#39;1px dashed blue&#39; }&quot;&gt;</span></span>
<span class="line" data-v-4fce6db2><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;" data-v-4fce6db2>  digraph D {</span></span>
<span class="line" data-v-4fce6db2><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;" data-v-4fce6db2>    node </span><span style="--shiki-light:#986801;--shiki-dark:#ABB2BF;" data-v-4fce6db2>[</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;" data-v-4fce6db2>shape=box</span><span style="--shiki-light:#986801;--shiki-dark:#ABB2BF;" data-v-4fce6db2>]</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;" data-v-4fce6db2>;</span></span>
<span class="line" data-v-4fce6db2><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;" data-v-4fce6db2>    start -&gt; process -&gt; end;</span></span>
<span class="line" data-v-4fce6db2><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;" data-v-4fce6db2>  }</span></span>
<span class="line" data-v-4fce6db2><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;" data-v-4fce6db2>&lt;/Graphviz&gt;</span></span>
<span class="line" data-v-4fce6db2></span>
<span class="line" data-v-4fce6db2><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;" data-v-4fce6db2>&lt;style scoped&gt;</span></span>
<span class="line" data-v-4fce6db2><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;" data-v-4fce6db2>.my-graph-container {</span></span>
<span class="line" data-v-4fce6db2><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;" data-v-4fce6db2>  background-color: #f0f0f0;</span></span>
<span class="line" data-v-4fce6db2><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;" data-v-4fce6db2>  padding: 10px;</span></span>
<span class="line" data-v-4fce6db2><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;" data-v-4fce6db2>}</span></span>
<span class="line" data-v-4fce6db2><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;" data-v-4fce6db2>&lt;/style&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;" data-v-4fce6db2><div class="line-number" data-v-4fce6db2></div><div class="line-number" data-v-4fce6db2></div><div class="line-number" data-v-4fce6db2></div><div class="line-number" data-v-4fce6db2></div><div class="line-number" data-v-4fce6db2></div><div class="line-number" data-v-4fce6db2></div><div class="line-number" data-v-4fce6db2></div><div class="line-number" data-v-4fce6db2></div><div class="line-number" data-v-4fce6db2></div><div class="line-number" data-v-4fce6db2></div><div class="line-number" data-v-4fce6db2></div><div class="line-number" data-v-4fce6db2></div><div class="line-number" data-v-4fce6db2></div></div></div>`,3)),s(e,{alignment:"right",containerClass:"my-graph-container",containerStyle:{border:"1px dashed blue"}},{default:i(()=>a[2]||(a[2]=[n(" digraph D { node [shape=box]; start -> process -> end; } ")])),_:1}),a[8]||(a[8]=d(`<h2 id="使用不同的引擎" tabindex="-1" data-v-4fce6db2><a class="header-anchor" href="#使用不同的引擎" data-v-4fce6db2><span data-v-4fce6db2>使用不同的引擎</span></a></h2><p data-v-4fce6db2>Graphviz 组件支持以下布局引擎，可以通过 <code data-v-4fce6db2>engine</code> 属性指定：</p><ul data-v-4fce6db2><li data-v-4fce6db2><code data-v-4fce6db2>dot</code> (默认): 适用于有向图的层次布局。</li><li data-v-4fce6db2><code data-v-4fce6db2>neato</code>: 适用于无向图的弹簧模型布局。</li><li data-v-4fce6db2><code data-v-4fce6db2>fdp</code>: 适用于无向图的弹簧模型布局，通常比 <code data-v-4fce6db2>neato</code>更快。</li><li data-v-4fce6db2><code data-v-4fce6db2>sfdp</code>: 适用于大型无向图的弹簧模型布局。</li><li data-v-4fce6db2><code data-v-4fce6db2>twopi</code>: 适用于径向布局，根节点在中心。</li><li data-v-4fce6db2><code data-v-4fce6db2>circo</code>: 适用于圆形布局，用于显示图的循环结构。</li></ul><p data-v-4fce6db2>你可以通过设置 <code data-v-4fce6db2>engine</code> 属性来指定 Graphviz 的布局引擎。这里演示使用 <code data-v-4fce6db2>circo</code> 引擎，它适用于绘制循环或圆形布局的图。</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;" data-v-4fce6db2><pre class="shiki shiki-themes one-light one-dark-pro vp-code" data-v-4fce6db2><code data-v-4fce6db2><span class="line" data-v-4fce6db2><span data-v-4fce6db2>&lt;Graphviz engine=&quot;circo&quot;&gt;</span></span>
<span class="line" data-v-4fce6db2><span data-v-4fce6db2>  graph {</span></span>
<span class="line" data-v-4fce6db2><span data-v-4fce6db2>    node [shape=circle];</span></span>
<span class="line" data-v-4fce6db2><span data-v-4fce6db2>    1 -- 2;</span></span>
<span class="line" data-v-4fce6db2><span data-v-4fce6db2>    2 -- 3;</span></span>
<span class="line" data-v-4fce6db2><span data-v-4fce6db2>    3 -- 4;</span></span>
<span class="line" data-v-4fce6db2><span data-v-4fce6db2>    4 -- 5;</span></span>
<span class="line" data-v-4fce6db2><span data-v-4fce6db2>    5 -- 1;</span></span>
<span class="line" data-v-4fce6db2><span data-v-4fce6db2>    1 -- 3;</span></span>
<span class="line" data-v-4fce6db2><span data-v-4fce6db2>    2 -- 4;</span></span>
<span class="line" data-v-4fce6db2><span data-v-4fce6db2>    3 -- 5;</span></span>
<span class="line" data-v-4fce6db2><span data-v-4fce6db2>    4 -- 1;</span></span>
<span class="line" data-v-4fce6db2><span data-v-4fce6db2>    5 -- 2;</span></span>
<span class="line" data-v-4fce6db2><span data-v-4fce6db2>  }</span></span>
<span class="line" data-v-4fce6db2><span data-v-4fce6db2>&lt;/Graphviz&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;" data-v-4fce6db2><div class="line-number" data-v-4fce6db2></div><div class="line-number" data-v-4fce6db2></div><div class="line-number" data-v-4fce6db2></div><div class="line-number" data-v-4fce6db2></div><div class="line-number" data-v-4fce6db2></div><div class="line-number" data-v-4fce6db2></div><div class="line-number" data-v-4fce6db2></div><div class="line-number" data-v-4fce6db2></div><div class="line-number" data-v-4fce6db2></div><div class="line-number" data-v-4fce6db2></div><div class="line-number" data-v-4fce6db2></div><div class="line-number" data-v-4fce6db2></div><div class="line-number" data-v-4fce6db2></div><div class="line-number" data-v-4fce6db2></div><div class="line-number" data-v-4fce6db2></div></div></div>`,5)),s(e,{engine:"circo"},{default:i(()=>a[3]||(a[3]=[n(" graph { node [shape=circle]; 1 -- 2; 2 -- 3; 3 -- 4; 4 -- 5; 5 -- 1; 1 -- 3; 2 -- 4; 3 -- 5; 4 -- 1; 5 -- 2; } ")])),_:1}),a[9]||(a[9]=d(`<h2 id="错误显示" tabindex="-1" data-v-4fce6db2><a class="header-anchor" href="#错误显示" data-v-4fce6db2><span data-v-4fce6db2>错误显示</span></a></h2><p data-v-4fce6db2>当提供的 DOT 语法无效或插槽为空时，组件会直接显示错误信息。</p><h3 id="空插槽" tabindex="-1" data-v-4fce6db2><a class="header-anchor" href="#空插槽" data-v-4fce6db2><span data-v-4fce6db2>空插槽</span></a></h3><div class="language-md line-numbers-mode" data-highlighter="shiki" data-ext="md" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;" data-v-4fce6db2><pre class="shiki shiki-themes one-light one-dark-pro vp-code" data-v-4fce6db2><code data-v-4fce6db2><span class="line" data-v-4fce6db2><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;" data-v-4fce6db2>&lt;Graphviz&gt;</span></span>
<span class="line" data-v-4fce6db2><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;" data-v-4fce6db2>&lt;/Graphviz&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;" data-v-4fce6db2><div class="line-number" data-v-4fce6db2></div><div class="line-number" data-v-4fce6db2></div></div></div>`,4)),s(e),a[10]||(a[10]=d(`<h3 id="无效的-dot-语法" tabindex="-1" data-v-4fce6db2><a class="header-anchor" href="#无效的-dot-语法" data-v-4fce6db2><span data-v-4fce6db2>无效的 DOT 语法</span></a></h3><p data-v-4fce6db2>这里使用一个明显缺少结束大括号的语法作为非法示例。</p><div class="language-md line-numbers-mode" data-highlighter="shiki" data-ext="md" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;" data-v-4fce6db2><pre class="shiki shiki-themes one-light one-dark-pro vp-code" data-v-4fce6db2><code data-v-4fce6db2><span class="line" data-v-4fce6db2><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;" data-v-4fce6db2>&lt;Graphviz&gt;</span></span>
<span class="line" data-v-4fce6db2><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;" data-v-4fce6db2>  digraph E {</span></span>
<span class="line" data-v-4fce6db2><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;" data-v-4fce6db2>    a -&gt; b;</span></span>
<span class="line" data-v-4fce6db2><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;" data-v-4fce6db2>&lt;/Graphviz&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;" data-v-4fce6db2><div class="line-number" data-v-4fce6db2></div><div class="line-number" data-v-4fce6db2></div><div class="line-number" data-v-4fce6db2></div><div class="line-number" data-v-4fce6db2></div></div></div>`,3)),s(e,null,{default:i(()=>a[4]||(a[4]=[n(" digraph E { a -> b; ")])),_:1})])}const f=t(p,[["render",r],["__scopeId","data-v-4fce6db2"]]),o=JSON.parse('{"path":"/demo/graphviz.html","title":"Graphviz Demo","lang":"zh-CN","frontmatter":{"date":"2025-05-02T00:00:00.000Z","article":false,"description":"Graphviz Demo 这个页面测试了 Graphviz 组件的功能。 默认对齐 (居中) 默认情况下，图表会居中显示。 左对齐 通过设置 alignment=\\"left\\" 属性，可以将图表左对齐。 右对齐 通过设置 alignment=\\"right\\" 属性，可以将图表右对齐。你也可以同时使用 containerClass 或 :container...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"WebPage\\",\\"name\\":\\"Graphviz Demo\\",\\"description\\":\\"Graphviz Demo 这个页面测试了 Graphviz 组件的功能。 默认对齐 (居中) 默认情况下，图表会居中显示。 左对齐 通过设置 alignment=\\\\\\"left\\\\\\" 属性，可以将图表左对齐。 右对齐 通过设置 alignment=\\\\\\"right\\\\\\" 属性，可以将图表右对齐。你也可以同时使用 containerClass 或 :container...\\"}"],["meta",{"property":"og:url","content":"https://www.xiezheyuan.xyz/demo/graphviz.html"}],["meta",{"property":"og:site_name","content":"xzy 的小屋"}],["meta",{"property":"og:title","content":"Graphviz Demo"}],["meta",{"property":"og:description","content":"Graphviz Demo 这个页面测试了 Graphviz 组件的功能。 默认对齐 (居中) 默认情况下，图表会居中显示。 左对齐 通过设置 alignment=\\"left\\" 属性，可以将图表左对齐。 右对齐 通过设置 alignment=\\"right\\" 属性，可以将图表右对齐。你也可以同时使用 containerClass 或 :container..."}],["meta",{"property":"og:type","content":"website"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-05-02T05:04:35.000Z"}],["meta",{"property":"article:published_time","content":"2025-05-02T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2025-05-02T05:04:35.000Z"}]]},"git":{"createdTime":1746161711000,"updatedTime":1746162275000,"contributors":[{"name":"xiezheyuan","username":"xiezheyuan","email":"102935106+xiezheyuan@users.noreply.github.com","commits":2,"url":"https://github.com/xiezheyuan"}]},"readingTime":{"minutes":1.67,"words":501},"filePathRelative":"demo/graphviz.md","excerpt":"\\n<p>这个页面测试了 Graphviz 组件的功能。</p>\\n<h2>默认对齐 (居中)</h2>\\n<p>默认情况下，图表会居中显示。</p>\\n<div class=\\"language-md line-numbers-mode\\" data-highlighter=\\"shiki\\" data-ext=\\"md\\" style=\\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\\"><pre class=\\"shiki shiki-themes one-light one-dark-pro vp-code\\"><code><span class=\\"line\\"><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">&lt;Graphviz&gt;</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">  digraph G {</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">    a -&gt; b;</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">    b -&gt; c;</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">    c -&gt; a;</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">  }</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">&lt;/Graphviz&gt;</span></span></code></pre>\\n<div class=\\"line-numbers\\" aria-hidden=\\"true\\" style=\\"counter-reset:line-number 0\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{f as comp,o as data};
